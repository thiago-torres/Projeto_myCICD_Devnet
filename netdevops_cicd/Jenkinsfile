pipeline {
    agent any

    environment {
        GIT_CREDENTIALS_ID = '4d90fc8c-6bc2-4f0b-91ea-0b26a8b83aaf'
        IOS_XE_ADDRESS = "sandbox-iosxe-recomm-1.cisco.com"
        IOS_XE_USERNAME = "admin"
        IOS_XE_PASSWORD = "C1sco12345"

        IOS_XR_ADDRESS = "sandbox-iosxr-1.cisco.com"
        IOS_XR_USERNAME = "admin"
        IOS_XR_PASSWORD = "C1sco12345"

        NXOS_ADDRESS = "sandbox-nxos-1.cisco.com"
        NXOS_USERNAME = "admin"
        NXOS_PASSWORD = "Admin_1234!"

        DNA_ADDRESS = "sandboxdnac2.cisco.com"
        DNA_USERNAME = "devnetuser"
        DNA_PASSWORD = "Cisco123!"

        ACI_ADDRESS = "sandboxapicdc.cisco.com"
        ACI_USERNAME = "admin"
        ACI_PASSWORD = "!v3G@!4@Y"

        ISE_ADDRESS = "devnetsandboxise.cisco.com"
        ISE_USERNAME = "readonly"
        ISE_PASSWORD = "ISEisC00L"

        SDWAN_ADDRESS = "sandbox-sdwan-2.cisco.com"
        SDWAN_USERNAME = "devnetuser"
        SDWAN_PASSWORD = "RG!_Yw919_83"

        NSO_ADDRESS = "sandbox-nso-1.cisco.com"
        NSO_USERNAME = "devnetuser"
        NSO_PASSWORD = "Services4Ever"

        MERAKI_ADDRESS = "account.meraki.com/secure/login/dashboard_login"
        MERAKI_USERNAME = "devnetmeraki@cisco.com"
        MERAKI_PASSWORD = "Adm!n123!"
        MERAKI_API = "7923dc84fe6f3a9d3bcac0e0c2bebd96ea72235d"
    }


    stages {
        stage('Checkout') {
            steps {
                checkoutCodeFromGitHub()
            }
        }

        stage('Configure Router Netmiko') {
            when {
                changeset "netdevops_cicd/loopback_update_cicd/netmiko_loopback.txt"
            }
            steps {
                configureRouterWithNetmiko()
            }
        }

        stage('Configure Router Netconf') {
            when {
                changeset "netdevops_cicd/loopback_update_cicd/netconf_loopback.xml"
            }
            steps {
                configureRouterWithNetconf()
            }
        }

        stage('Configure Router Restconf') {
            when {
                changeset "netdevops_cicd/loopback_update_cicd/restconf_loopback.json"
            }
            steps {
                configureRouterWithRestconf()
            }
        }
    }

    post {
        success {
            notifyPipelineSuccess()
        }
        failure {
            notifyPipelineFailure()
        }
    }
}

def checkoutCodeFromGitHub() {
    checkout([$class: 'GitSCM',
              branches: [[name: '*/main']],
              doGenerateSubmoduleConfigurations: false,
              extensions: [],
              userRemoteConfigs: [[
                  url: 'https://github.com/thiago-torres/Projeto_myCICD_Devnet.git',
                  credentialsId: env.GIT_CREDENTIALS_ID
              ]]
    ])
}

def configureRouterWithNetmiko() {
    script {
        sh 'python3 netdevops_cicd/loopback_update_cicd/netmiko_config_loopback.py'
    }
}

def configureRouterWithNetconf() {
    script {
        sh 'python3 netdevops_cicd/loopback_update_cicd/netconf_config_loopback.py'
    }
}

def configureRouterWithRestconf() {
    script {
        sh 'python3 netdevops_cicd/loopback_update_cicd/restconf_config_loopback.py'
    }
}

def notifyPipelineSuccess() {
    echo 'Pipeline executed successfully!'
}

def notifyPipelineFailure() {
    echo 'Pipeline failed!'
}
